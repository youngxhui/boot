// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: people.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type People struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Role     *Role  `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *People) Reset() {
	*x = People{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *People) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*People) ProtoMessage() {}

func (x *People) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use People.ProtoReflect.Descriptor instead.
func (*People) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{0}
}

func (x *People) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *People) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *People) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *People) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type ListPeoplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The parent resource name, for example, "shelves/shelf1"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// The maximum number of items to return.
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListPeoplesRequest) Reset() {
	*x = ListPeoplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeoplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeoplesRequest) ProtoMessage() {}

func (x *ListPeoplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeoplesRequest.ProtoReflect.Descriptor instead.
func (*ListPeoplesRequest) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{1}
}

func (x *ListPeoplesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPeoplesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListPeoplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The field name should match the noun "People" in the method name.
	// There will be a maximum number of items returned based on the page_size field in the request.
	Peoples []*People `protobuf:"bytes,1,rep,name=Peoples,proto3" json:"Peoples,omitempty"`
}

func (x *ListPeoplesResponse) Reset() {
	*x = ListPeoplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPeoplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeoplesResponse) ProtoMessage() {}

func (x *ListPeoplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeoplesResponse.ProtoReflect.Descriptor instead.
func (*ListPeoplesResponse) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{2}
}

func (x *ListPeoplesResponse) GetPeoples() []*People {
	if x != nil {
		return x.Peoples
	}
	return nil
}

type GetPeopleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The field will contain name of the resource requested.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPeopleRequest) Reset() {
	*x = GetPeopleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPeopleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeopleRequest) ProtoMessage() {}

func (x *GetPeopleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeopleRequest.ProtoReflect.Descriptor instead.
func (*GetPeopleRequest) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{3}
}

func (x *GetPeopleRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreatePeopleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	People *People `protobuf:"bytes,1,opt,name=People,proto3" json:"People,omitempty"`
}

func (x *CreatePeopleRequest) Reset() {
	*x = CreatePeopleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePeopleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePeopleRequest) ProtoMessage() {}

func (x *CreatePeopleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePeopleRequest.ProtoReflect.Descriptor instead.
func (*CreatePeopleRequest) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePeopleRequest) GetPeople() *People {
	if x != nil {
		return x.People
	}
	return nil
}

type UpdatePeopleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The People resource which replaces the resource on the server.
	People *People `protobuf:"bytes,1,opt,name=People,proto3" json:"People,omitempty"`
}

func (x *UpdatePeopleRequest) Reset() {
	*x = UpdatePeopleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePeopleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePeopleRequest) ProtoMessage() {}

func (x *UpdatePeopleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePeopleRequest.ProtoReflect.Descriptor instead.
func (*UpdatePeopleRequest) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePeopleRequest) GetPeople() *People {
	if x != nil {
		return x.People
	}
	return nil
}

type DeletePeopleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the People to be deleted.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePeopleRequest) Reset() {
	*x = DeletePeopleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_people_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePeopleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePeopleRequest) ProtoMessage() {}

func (x *DeletePeopleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_people_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePeopleRequest.ProtoReflect.Descriptor instead.
func (*DeletePeopleRequest) Descriptor() ([]byte, []int) {
	return file_people_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePeopleRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_people_proto protoreflect.FileDescriptor

var file_people_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x6a, 0x0a, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3c, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x07, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x52, 0x07, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x22, 0x3d, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x52, 0x06, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x22, 0x25, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xd7, 0x02, 0x0a, 0x0d, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x6f,
	0x70, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_people_proto_rawDescOnce sync.Once
	file_people_proto_rawDescData = file_people_proto_rawDesc
)

func file_people_proto_rawDescGZIP() []byte {
	file_people_proto_rawDescOnce.Do(func() {
		file_people_proto_rawDescData = protoimpl.X.CompressGZIP(file_people_proto_rawDescData)
	})
	return file_people_proto_rawDescData
}

var file_people_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_people_proto_goTypes = []interface{}{
	(*People)(nil),              // 0: protos.People
	(*ListPeoplesRequest)(nil),  // 1: protos.ListPeoplesRequest
	(*ListPeoplesResponse)(nil), // 2: protos.ListPeoplesResponse
	(*GetPeopleRequest)(nil),    // 3: protos.GetPeopleRequest
	(*CreatePeopleRequest)(nil), // 4: protos.CreatePeopleRequest
	(*UpdatePeopleRequest)(nil), // 5: protos.UpdatePeopleRequest
	(*DeletePeopleRequest)(nil), // 6: protos.DeletePeopleRequest
	(*Role)(nil),                // 7: protos.Role
	(*emptypb.Empty)(nil),       // 8: google.protobuf.Empty
}
var file_people_proto_depIdxs = []int32{
	7, // 0: protos.People.role:type_name -> protos.Role
	0, // 1: protos.ListPeoplesResponse.Peoples:type_name -> protos.People
	0, // 2: protos.CreatePeopleRequest.People:type_name -> protos.People
	0, // 3: protos.UpdatePeopleRequest.People:type_name -> protos.People
	1, // 4: protos.PeopleService.ListPeoples:input_type -> protos.ListPeoplesRequest
	3, // 5: protos.PeopleService.GetPeople:input_type -> protos.GetPeopleRequest
	4, // 6: protos.PeopleService.CreatePeople:input_type -> protos.CreatePeopleRequest
	5, // 7: protos.PeopleService.UpdatePeople:input_type -> protos.UpdatePeopleRequest
	6, // 8: protos.PeopleService.DeletePeople:input_type -> protos.DeletePeopleRequest
	2, // 9: protos.PeopleService.ListPeoples:output_type -> protos.ListPeoplesResponse
	0, // 10: protos.PeopleService.GetPeople:output_type -> protos.People
	0, // 11: protos.PeopleService.CreatePeople:output_type -> protos.People
	0, // 12: protos.PeopleService.UpdatePeople:output_type -> protos.People
	8, // 13: protos.PeopleService.DeletePeople:output_type -> google.protobuf.Empty
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_people_proto_init() }
func file_people_proto_init() {
	if File_people_proto != nil {
		return
	}
	file_role_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_people_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*People); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_people_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeoplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_people_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPeoplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_people_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPeopleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_people_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePeopleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_people_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePeopleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_people_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePeopleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_people_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_people_proto_goTypes,
		DependencyIndexes: file_people_proto_depIdxs,
		MessageInfos:      file_people_proto_msgTypes,
	}.Build()
	File_people_proto = out.File
	file_people_proto_rawDesc = nil
	file_people_proto_goTypes = nil
	file_people_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PeopleServiceClient is the client API for PeopleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PeopleServiceClient interface {
	ListPeoples(ctx context.Context, in *ListPeoplesRequest, opts ...grpc.CallOption) (*ListPeoplesResponse, error)
	GetPeople(ctx context.Context, in *GetPeopleRequest, opts ...grpc.CallOption) (*People, error)
	CreatePeople(ctx context.Context, in *CreatePeopleRequest, opts ...grpc.CallOption) (*People, error)
	UpdatePeople(ctx context.Context, in *UpdatePeopleRequest, opts ...grpc.CallOption) (*People, error)
	DeletePeople(ctx context.Context, in *DeletePeopleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type peopleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPeopleServiceClient(cc grpc.ClientConnInterface) PeopleServiceClient {
	return &peopleServiceClient{cc}
}

func (c *peopleServiceClient) ListPeoples(ctx context.Context, in *ListPeoplesRequest, opts ...grpc.CallOption) (*ListPeoplesResponse, error) {
	out := new(ListPeoplesResponse)
	err := c.cc.Invoke(ctx, "/protos.PeopleService/ListPeoples", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peopleServiceClient) GetPeople(ctx context.Context, in *GetPeopleRequest, opts ...grpc.CallOption) (*People, error) {
	out := new(People)
	err := c.cc.Invoke(ctx, "/protos.PeopleService/GetPeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peopleServiceClient) CreatePeople(ctx context.Context, in *CreatePeopleRequest, opts ...grpc.CallOption) (*People, error) {
	out := new(People)
	err := c.cc.Invoke(ctx, "/protos.PeopleService/CreatePeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peopleServiceClient) UpdatePeople(ctx context.Context, in *UpdatePeopleRequest, opts ...grpc.CallOption) (*People, error) {
	out := new(People)
	err := c.cc.Invoke(ctx, "/protos.PeopleService/UpdatePeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peopleServiceClient) DeletePeople(ctx context.Context, in *DeletePeopleRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/protos.PeopleService/DeletePeople", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PeopleServiceServer is the server API for PeopleService service.
type PeopleServiceServer interface {
	ListPeoples(context.Context, *ListPeoplesRequest) (*ListPeoplesResponse, error)
	GetPeople(context.Context, *GetPeopleRequest) (*People, error)
	CreatePeople(context.Context, *CreatePeopleRequest) (*People, error)
	UpdatePeople(context.Context, *UpdatePeopleRequest) (*People, error)
	DeletePeople(context.Context, *DeletePeopleRequest) (*emptypb.Empty, error)
}

// UnimplementedPeopleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPeopleServiceServer struct {
}

func (*UnimplementedPeopleServiceServer) ListPeoples(context.Context, *ListPeoplesRequest) (*ListPeoplesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPeoples not implemented")
}
func (*UnimplementedPeopleServiceServer) GetPeople(context.Context, *GetPeopleRequest) (*People, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeople not implemented")
}
func (*UnimplementedPeopleServiceServer) CreatePeople(context.Context, *CreatePeopleRequest) (*People, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePeople not implemented")
}
func (*UnimplementedPeopleServiceServer) UpdatePeople(context.Context, *UpdatePeopleRequest) (*People, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePeople not implemented")
}
func (*UnimplementedPeopleServiceServer) DeletePeople(context.Context, *DeletePeopleRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePeople not implemented")
}

func RegisterPeopleServiceServer(s *grpc.Server, srv PeopleServiceServer) {
	s.RegisterService(&_PeopleService_serviceDesc, srv)
}

func _PeopleService_ListPeoples_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPeoplesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeopleServiceServer).ListPeoples(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PeopleService/ListPeoples",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeopleServiceServer).ListPeoples(ctx, req.(*ListPeoplesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeopleService_GetPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeopleServiceServer).GetPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PeopleService/GetPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeopleServiceServer).GetPeople(ctx, req.(*GetPeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeopleService_CreatePeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeopleServiceServer).CreatePeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PeopleService/CreatePeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeopleServiceServer).CreatePeople(ctx, req.(*CreatePeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeopleService_UpdatePeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeopleServiceServer).UpdatePeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PeopleService/UpdatePeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeopleServiceServer).UpdatePeople(ctx, req.(*UpdatePeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PeopleService_DeletePeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeopleServiceServer).DeletePeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.PeopleService/DeletePeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeopleServiceServer).DeletePeople(ctx, req.(*DeletePeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PeopleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.PeopleService",
	HandlerType: (*PeopleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPeoples",
			Handler:    _PeopleService_ListPeoples_Handler,
		},
		{
			MethodName: "GetPeople",
			Handler:    _PeopleService_GetPeople_Handler,
		},
		{
			MethodName: "CreatePeople",
			Handler:    _PeopleService_CreatePeople_Handler,
		},
		{
			MethodName: "UpdatePeople",
			Handler:    _PeopleService_UpdatePeople_Handler,
		},
		{
			MethodName: "DeletePeople",
			Handler:    _PeopleService_DeletePeople_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "people.proto",
}
