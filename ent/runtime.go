// Code generated by entc, DO NOT EDIT.

package ent

import (
	"boot/ent/schema"
	"boot/ent/tool"
	"boot/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	toolFields := schema.Tool{}.Fields()
	_ = toolFields
	// toolDescMachineID is the schema descriptor for machine_id field.
	toolDescMachineID := toolFields[0].Descriptor()
	// tool.MachineIDValidator is a validator for the "machine_id" field. It is called by the builders before save.
	tool.MachineIDValidator = toolDescMachineID.Validators[0].(func(int) error)
	// toolDescStatus is the schema descriptor for status field.
	toolDescStatus := toolFields[1].Descriptor()
	// tool.DefaultStatus holds the default value on creation for the status field.
	tool.DefaultStatus = toolDescStatus.Default.(int)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.DefaultUsername holds the default value on creation for the username field.
	user.DefaultUsername = userDescUsername.Default.(string)
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userFields[2].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userFields[3].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
}
